import { getStaticPathForStudents, getStudents } from '../../../utils/student-utils';
import React, { useEffect, useState } from 'react'
import { Button, Table, Input } from 'semantic-ui-react'
import styles from '../../../styles/Home.module.css'
import Head from 'next/head'
import Router from 'next/router';
import { formatDateStringFromMs } from '../../../utils/date-utils';


export async function getStaticProps({ params }) {
    const student_id = params.id
    const students = (await getStudents()).filter((student) => student.student_id != student_id);

    return {
        props: {
            student_id,
            students
        }
    }
}

export async function getStaticPaths() {
    const paths = await getStaticPathForStudents();

    return {
        paths,
        fallback: false
    }
}

export default function SearchStudents({ student_id, students }) {

    const [keyword, setKeyword] = useState("");
    const [rows, setRows] = useState([])

    useEffect(() => {
        let filteredStudents = students;

        if (keyword != "") {
            filteredStudents = students.filter((student) => student.name.toLowerCase().includes(keyword.toLowerCase()));
        }

        if (filteredStudents.length == 0) {
            setRows('There are no students based on the filter')
        } else {
            setRows(filteredStudents.map(function (student) {
                return (
                    <Table.Row key={student.student_id}>
                        <Table.Cell>{student.student_id}</Table.Cell>
                        <Table.Cell>{student.name}</Table.Cell>
                        <Table.Cell>{student.address}</Table.Cell>
                        <Table.Cell>{student.phone_number}</Table.Cell>
                        <Table.Cell>{formatDateStringFromMs(parseInt(student.date_of_birth))}</Table.Cell>
                    </Table.Row>
                )
            }));
        }

    }, [keyword]);

    function backToStudentHome() {
        Router.push(`/student/${student_id}`)
    }

    return (

        <div className={styles.container}>
            <Head>
                <title>Search Other Students</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <h1 className={styles.title}>
                Search Other Students
            </h1>

            <br />

            <Input value={keyword} onChange={e => setKeyword(e.target.value)} maxLength="30" fluid placeholder='Please enter the name of the student' />

            <br />


            <Table celled>
                <Table.Header>
                    <Table.Row>
                        <Table.HeaderCell>StudentID</Table.HeaderCell>
                        <Table.HeaderCell>Name</Table.HeaderCell>
                        <Table.HeaderCell>Addrress</Table.HeaderCell>
                        <Table.HeaderCell>PhoneNumber</Table.HeaderCell>
                        <Table.HeaderCell>DateOfBirth</Table.HeaderCell>
                    </Table.Row>
                </Table.Header>

                <Table.Body>
                    {rows}
                </Table.Body>

            </Table>

            <br />
            <Button primary onClick={backToStudentHome} type='submit'>Back To Home</Button>
        </div>
    )
}