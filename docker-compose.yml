version: "3.9"
services:
  student_db:
    container_name: edufi_student_db
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10.6.4-focal
    restart: always
    environment:
      MYSQL_DATABASE: 'Edufi_Student'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3307:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - ./backend/students/database/:/docker-entrypoint-initdb.d
    networks:
      - sub-etha
  
  student_backend:
    container_name: student_microservice
    # Configuration for building the docker image for the service
    build:
      context: ./backend/students/server/ # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    environment:
      APP_DB_CONTAINER_NAME: 'student_db'
      APP_DB_NAME: 'Edufi_Student'
      APP_DB_PORT: '3306'
      APP_DB_USERNAME: 'user'
      APP_DB_PASSWORD: 'password'
    expose:
      # Opens port 8080 on the container
      - '8080'
    volumes:
      - ./backend/students/server:/code
    restart: always
    depends_on:
      - student_db
    networks:
      - sub-etha

  student_acl:
    container_name: student_acl_server
    build:
      context: ./backend/students/acl/
      target: production
    volumes:
      - ./backend/students/acl/:/app
      - /app/node_modules
    command: npm run start
    expose:
      # Opens port 4000 on the container
      - '4000'
    depends_on:
      - student_backend
    networks:
      - sub-etha
  
  general_server:
    container_name: edufi_general_purpose_server
    build:
      context: ./server/
      target: production
    volumes:
      - ./server/:/app
      - /app/node_modules
    expose:
      # Opens port 5000 on the container
      - '5000'
    depends_on:
      - student_backend
    networks:
      - sub-etha

  proxy:
    container_name: edufi_proxy
    build: 
      context: backend/proxy
      dockerfile: Dockerfile
    ports:
      - 80:80
    depends_on: 
      - general_server
      - student_acl
    networks:
      - sub-etha

volumes:
  node_modules:

networks:
  sub-etha: