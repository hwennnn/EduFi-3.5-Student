name: EduFi CD for Delivery

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Build the stack
  #       run: docker-compose up -d
  
  #     - name: Install Node
  #       uses: actions/setup-node@v1
  #       with: 
  #         node-version: '12.x'

  #     - name: Install newman
  #       run: |
  #         npm install -g newman

  #     - name: Test REST API with POSTMAN collection
  #       run: |
  #         newman run ./test/Edufi-Student.postman_collection.json -r cli
      
  #     - if: ${{failure()}}       
  #       name: Create Issues
  #       uses: nashmaniac/create-issue-action@v1.1
  #       with:
  #           title: Build Failed for CI on Push Events
  #           token: ${{secrets.GITHUB_TOKEN}}
  #           assignees: ${{github.actor}}
  #           labels: worflow-failed
  #           body: Workflow failed for commit ${{github.sha}} @ ${{github.ref}}  

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2

    - name: Set environment variables for version number
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
               
    - name: Create GitHub release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}  
        body_path: |

    - name: Archive site content
      uses: thedoctor0/zip-release@master
      with:
        filename: content.zip

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: ./content.zip
        asset_name: ${{ env.RELEASE_VERSION }}.zip
        asset_content_type: application/zip
    
    - name: Create release branch
      uses: peterjgrainger/action-create-branch@v2.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: release-${{ env.RELEASE_VERSION }}
  
  push-docker-images:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Build
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: user/app:latest
    
